version: '3.8'

services:
    nginx-service:
        image: nginx:stable-alpine
        container_name: nginx-container
        ports:
            - "8080:80"
        volumes:
            - ./app:/var/www/project
            - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            - php81-gpn
            - postgres
            - web-irp
            - web-vlp
        networks:
            - app-network

    php81-gpn:
        build:
            context: .
            dockerfile: ./php/Dockerfile
        container_name: php81-container
        ports:
            - "9000:9000"
        volumes:
            - ./app:/var/www/project
        networks:
            - app-network

    postgres:
        image: postgres:latest
        container_name: postgres_container
        environment:
            POSTGRES_USER: postgres_user
            POSTGRES_PASSWORD: postgres_password
            POSTGRES_DB: postgres_db
            PGDATA: /var/lib/postgresql/data/pgdata
        ports:
            - "5432:5432"
        volumes:
            - ./pgdata:/var/lib/postgresql/data/pgdata
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -U postgres_user -d postgres_db" ]
            interval: 30s
            timeout: 10s
            retries: 5
        restart: unless-stopped
        tty: true
        stdin_open: true
        networks:
            - app-network
    
    web-irp:
        build:
            context: .
            dockerfile: ./irp/Dockerfile
        command: uvicorn main:app --host 0.0.0.0 --reload
        volumes:
            - ./irp:/app
        environment:
            - PYTHONUNBUFFERED=1
        ports:
            - 8008:8000
        networks:
            - app-network
    
    web-vlp:
        build:
            context: .
            dockerfile: ./vlp/Dockerfile
        command: uvicorn main:app --host 0.0.0.0 --reload
        volumes:
            - ./vlp:/app
        environment:
            - PYTHONUNBUFFERED=1
        ports:
            - 8009:8000
        networks:
            - app-network

    # api-gateway:
    #     container_name: api-gateway
    #     build:
    #         context: ../services/api-gateway
    #         dockerfile: ApiGateway.Dockerfile
    #     ports:
    #         - 3000:3000
    #     depends_on:
    #         - postgres

    # well-data-svc:
    #     container_name: well-data-svc
    #     build:
    #         context: ../services/well-data-svc
    #         dockerfile: WellDataSvc.Dockerfile
    #     ports:
    #         - 7000:7000
    #     depends_on:
    #         - postgres

volumes:
  pgdata:
    driver: local

networks:
    app-network:
        driver: bridge