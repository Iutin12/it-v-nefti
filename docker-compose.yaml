services:
    nginx-service:
        image: nginx:stable-alpine
        container_name: nginx-container
        ports:
            - "8080:80"
        volumes:
            - ./app:/var/www/project
            - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            - php81-gpn
            - postgres
            - web-irp
            - web-vlp
    php81-gpn:
        build:
            context: .
            dockerfile: ./php/Dockerfile
        container_name: php81-container
        ports:
            - "9000:9000"
        volumes:
            - ./app:/var/www/project
    # mysql8-service:
    #     # We use a mariadb image which supports both amd64 & arm64 architecture
    #     # image: mariadb:10-focal
    #     # If you really want to use MySQL, uncomment the following line
    #     image: mysql:8
    #     command: '--default-authentication-plugin=mysql_native_password'
    #     # restart: always
    #     healthcheck:
    #         test: ['CMD-SHELL', 'mysqladmin ping -h 127.0.0.1 --password="$$(cat /run/secrets/db-password)" --silent']
    #         interval: 3s
    #         retries: 5
    #         start_period: 30s
    #     secrets:
    #         - db-password
    #     volumes:
    #         - ./mysql:/var/lib/mysql
    #     environment:
    #         - MYSQL_DATABASE=example
    #         - MYSQL_ROOT_PASSWORD_FILE=/run/secrets/db-password
    #     expose:
    #         - 3306
    #         - 33060
    postgres:
        image: postgres:latest
        container_name: postgres_container
        environment:
            POSTGRES_USER: postgres_user
            POSTGRES_PASSWORD: postgres_password
            POSTGRES_DB: postgres_db
            PGDATA: /var/lib/postgresql/data/pgdata
        ports:
            - "5430:5432"
        volumes:
            - ./pgdata:/var/lib/postgresql/data/pgdata
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -U postgres_user -d postgres_db" ]
            interval: 30s
            timeout: 10s
            retries: 5
        restart: unless-stopped
        tty: true
        stdin_open: true
    
    web-irp:
        build:
            context: .
            dockerfile: ./python/Dockerfile
        command: uvicorn main:app --host 0.0.0.0 --reload
        volumes:
            - ./irp:/app
        environment:
            - PYTHONUNBUFFERED=1
        ports:
            - 8008:8000
    
    web-vlp:
        build:
            context: .
            dockerfile: ./python/Dockerfile
        command: uvicorn main:app --host 0.0.0.0 --reload
        volumes:
            - ./vlp:/app
        environment:
            - PYTHONUNBUFFERED=1
        ports:
            - 8009:8000

volumes:
  pgdata:
    driver: local
